local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Criar pasta CarsReplay em ReplicatedStorage
local carsReplayFolder = Instance.new("Folder")
carsReplayFolder.Name = "CarsReplay"
carsReplayFolder.Parent = ReplicatedStorage

-- Criar pasta TempDebris no Workspace para pe√ßas soltas
local tempDebrisFolder = Instance.new("Folder")
tempDebrisFolder.Name = "TempDebris"
tempDebrisFolder.Parent = Workspace

-- Criar ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui
screenGui.Enabled = true

-- Criar Bot√£o Principal
local mainButton = Instance.new("TextButton")
mainButton.Size = UDim2.new(0, 50, 0, 50)
mainButton.Position = UDim2.new(0.1, 0, 0.1, 0)
mainButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainButton.Text = "Rec"
mainButton.TextColor3 = Color3.fromRGB(255, 255, 255)
mainButton.TextScaled = true
mainButton.Font = Enum.Font.Gotham
mainButton.Parent = screenGui
mainButton.Draggable = true
mainButton.Active = true
mainButton.Selectable = true
mainButton.Visible = true

local mainButtonCorner = Instance.new("UICorner")
mainButtonCorner.CornerRadius = UDim.new(0, 10)
mainButtonCorner.Parent = mainButton

local mainButtonStroke = Instance.new("UIStroke")
mainButtonStroke.Color = Color3.fromRGB(52, 120, 246)
mainButtonStroke.Thickness = 0.5
mainButtonStroke.Transparency = 0.5
mainButtonStroke.Parent = mainButton

-- Criar Frame Principal
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 300, 0, 300)
mainFrame.Position = UDim2.new(0.1, 0, 0.1, 60)
mainFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
mainFrame.Visible = false
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local mainFrameCorner = Instance.new("UICorner")
mainFrameCorner.CornerRadius = UDim.new(0, 12)
mainFrameCorner.Parent = mainFrame

local mainFrameStroke = Instance.new("UIStroke")
mainFrameStroke.Color = Color3.fromRGB(255, 255, 255)
mainFrameStroke.Thickness = 0.5
mainFrameStroke.Transparency = 0.5
mainFrameStroke.Parent = mainFrame

local mainFramePadding = Instance.new("UIPadding")
mainFramePadding.PaddingTop = UDim.new(0, 15)
mainFramePadding.PaddingBottom = UDim.new(0, 15)
mainFramePadding.PaddingLeft = UDim.new(0, 15)
mainFramePadding.PaddingRight = UDim.new(0, 15)
mainFramePadding.Parent = mainFrame

-- Contador de Tempo
local timeLabel = Instance.new("TextLabel")
timeLabel.Size = UDim2.new(0, 120, 0, 30)
timeLabel.Position = UDim2.new(0, 0, 0, 10)
timeLabel.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
timeLabel.Text = "00:00:000"
timeLabel.TextColor3 = Color3.fromRGB(176, 176, 176)
timeLabel.TextScaled = true
timeLabel.Font = Enum.Font.Gotham
timeLabel.Parent = mainFrame

local timeLabelCorner = Instance.new("UICorner")
timeLabelCorner.CornerRadius = UDim.new(0, 10)
timeLabelCorner.Parent = timeLabel

local timeLabelStroke = Instance.new("UIStroke")
timeLabelStroke.Color = Color3.fromRGB(255, 255, 255)
timeLabelStroke.Thickness = 0.5
timeLabelStroke.Transparency = 0.5
timeLabelStroke.Parent = timeLabel

-- Bot√£o Play/Pause
local playPauseButton = Instance.new("TextButton")
playPauseButton.Size = UDim2.new(0, 40, 0, 40)
playPauseButton.Position = UDim2.new(0, 130, 0, 10)
playPauseButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
playPauseButton.Text = "‚ñ∂"
playPauseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
playPauseButton.TextScaled = true
playPauseButton.Font = Enum.Font.Gotham
playPauseButton.Parent = mainFrame

local playPauseButtonCorner = Instance.new("UICorner")
playPauseButtonCorner.CornerRadius = UDim.new(0, 10)
playPauseButtonCorner.Parent = playPauseButton

local playPauseButtonStroke = Instance.new("UIStroke")
playPauseButtonStroke.Color = Color3.fromRGB(255, 255, 255)
playPauseButtonStroke.Thickness = 0.5
playPauseButtonStroke.Parent = playPauseButton

-- Bot√£o Stop
local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(0, 40, 0, 40)
stopButton.Position = UDim2.new(0, 180, 0, 10)
stopButton.BackgroundColor3 = Color3.fromRGB(211, 47, 47)
stopButton.Text = ""
stopButton.Parent = mainFrame

local stopButtonCorner = Instance.new("UICorner")
stopButtonCorner.CornerRadius = UDim.new(0, 10)
stopButtonCorner.Parent = stopButton

local stopButtonStroke = Instance.new("UIStroke")
stopButtonStroke.Color = Color3.fromRGB(255, 255, 255)
stopButtonStroke.Thickness = 0.5
stopButtonStroke.Parent = stopButton

local stopButtonInnerSquare = Instance.new("Frame")
stopButtonInnerSquare.Size = UDim2.new(0, 15, 0, 15)
stopButtonInnerSquare.Position = UDim2.new(0.5, -7.5, 0.5, -7.5)
stopButtonInnerSquare.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
stopButtonInnerSquare.Parent = stopButton

local stopButtonInnerSquareCorner = Instance.new("UICorner")
stopButtonInnerSquareCorner.CornerRadius = UDim.new(0, 4)
stopButtonInnerSquareCorner.Parent = stopButtonInnerSquare

-- Bot√£o Clear
local clearButton = Instance.new("TextButton")
clearButton.Size = UDim2.new(0, 30, 0, 30)
clearButton.Position = UDim2.new(0, 230, 0, 10)
clearButton.BackgroundColor3 = Color3.fromRGB(211, 47, 47)
clearButton.Text = "üóë"
clearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
clearButton.TextScaled = true
clearButton.Font = Enum.Font.Gotham
clearButton.Parent = mainFrame

local clearButtonCorner = Instance.new("UICorner")
clearButtonCorner.CornerRadius = UDim.new(0, 10)
clearButtonCorner.Parent = clearButton

local clearButtonStroke = Instance.new("UIStroke")
clearButtonStroke.Color = Color3.fromRGB(255, 255, 255)
clearButtonStroke.Thickness = 0.5
clearButtonStroke.Parent = clearButton

-- Bot√£o Replay
local replayButton = Instance.new("TextButton")
replayButton.Size = UDim2.new(0, 40, 0, 40)
replayButton.Position = UDim2.new(0, 0, 0, 60)
replayButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
replayButton.Text = "üîÑ"
replayButton.TextColor3 = Color3.fromRGB(255, 255, 255)
replayButton.TextScaled = true
replayButton.Font = Enum.Font.Gotham
replayButton.Parent = mainFrame

local replayButtonCorner = Instance.new("UICorner")
replayButtonCorner.CornerRadius = UDim.new(0, 10)
replayButtonCorner.Parent = replayButton

local replayButtonStroke = Instance.new("UIStroke")
replayButtonStroke.Color = Color3.fromRGB(255, 255, 255)
replayButtonStroke.Thickness = 0.5
replayButtonStroke.Parent = replayButton

-- Bot√£o Delete Clones
local deleteClonesButton = Instance.new("TextButton")
deleteClonesButton.Size = UDim2.new(0, 40, 0, 40)
deleteClonesButton.Position = UDim2.new(0, 50, 0, 60)
deleteClonesButton.BackgroundColor3 = Color3.fromRGB(211, 47, 47)
deleteClonesButton.Text = "‚úñ"
deleteClonesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
deleteClonesButton.TextScaled = true
deleteClonesButton.Font = Enum.Font.Gotham
deleteClonesButton.Parent = mainFrame

local deleteClonesButtonCorner = Instance.new("UICorner")
deleteClonesButtonCorner.CornerRadius = UDim.new(0, 10)
deleteClonesButtonCorner.Parent = deleteClonesButton

local deleteClonesButtonStroke = Instance.new("UIStroke")
deleteClonesButtonStroke.Color = Color3.fromRGB(255, 255, 255)
deleteClonesButtonStroke.Thickness = 0.5
deleteClonesButtonStroke.Parent = deleteClonesButton

-- Bot√£o Pause (para replays)
local pauseButton = Instance.new("TextButton")
pauseButton.Size = UDim2.new(0, 40, 0, 40)
pauseButton.Position = UDim2.new(0, 100, 0, 60)
pauseButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
pauseButton.Text = "‚è∏"
pauseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
pauseButton.TextScaled = true
pauseButton.Font = Enum.Font.Gotham
pauseButton.Parent = mainFrame

local pauseButtonCorner = Instance.new("UICorner")
pauseButtonCorner.CornerRadius = UDim.new(0, 10)
pauseButtonCorner.Parent = pauseButton

local pauseButtonStroke = Instance.new("UIStroke")
pauseButtonStroke.Color = Color3.fromRGB(255, 255, 255)
pauseButtonStroke.Thickness = 0.5
pauseButtonStroke.Parent = pauseButton

-- Bot√£o Loop
local loopButton = Instance.new("TextButton")
loopButton.Size = UDim2.new(0, 30, 0, 30)
loopButton.Position = UDim2.new(0, 150, 0, 60)
loopButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
loopButton.Text = "üîÅ"
loopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
loopButton.TextScaled = true
loopButton.Font = Enum.Font.Gotham
loopButton.Parent = mainFrame

local loopButtonCorner = Instance.new("UICorner")
loopButtonCorner.CornerRadius = UDim.new(0, 10)
loopButtonCorner.Parent = loopButton

local loopButtonStroke = Instance.new("UIStroke")
loopButtonStroke.Color = Color3.fromRGB(255, 255, 255)
loopButtonStroke.Thickness = 0.5
loopButtonStroke.Parent = loopButton

-- Campo de entrada para Slowmotion
local slowmotionInput = Instance.new("TextBox")
slowmotionInput.Size = UDim2.new(0, 40, 0, 40)
slowmotionInput.Position = UDim2.new(0, 200, 0, 60)
slowmotionInput.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
slowmotionInput.Text = "x1.0"
slowmotionInput.TextColor3 = Color3.fromRGB(255, 255, 255)
slowmotionInput.TextScaled = true
slowmotionInput.Font = Enum.Font.Gotham
slowmotionInput.Parent = mainFrame

local slowmotionInputCorner = Instance.new("UICorner")
slowmotionInputCorner.CornerRadius = UDim.new(0, 10)
slowmotionInputCorner.Parent = slowmotionInput

local slowmotionInputStroke = Instance.new("UIStroke")
slowmotionInputStroke.Color = Color3.fromRGB(52, 120, 246)
slowmotionInputStroke.Thickness = 0.5
slowmotionInputStroke.Parent = slowmotionInput

-- Bot√£o Spectate
local spectateButton = Instance.new("TextButton")
spectateButton.Size = UDim2.new(0, 60, 0, 30)
spectateButton.Position = UDim2.new(0, 0, 0, 110)
spectateButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
spectateButton.Text = "üëÅ"
spectateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
spectateButton.TextScaled = true
spectateButton.Font = Enum.Font.Gotham
spectateButton.Parent = mainFrame

local spectateButtonCorner = Instance.new("UICorner")
spectateButtonCorner.CornerRadius = UDim.new(0, 10)
spectateButtonCorner.Parent = spectateButton

local spectateButtonStroke = Instance.new("UIStroke")
spectateButtonStroke.Color = Color3.fromRGB(255, 255, 255)
spectateButtonStroke.Thickness = 0.5
spectateButtonStroke.Parent = spectateButton

-- Bot√£o Save
local saveButton = Instance.new("TextButton")
saveButton.Size = UDim2.new(0, 60, 0, 30)
saveButton.Position = UDim2.new(0, 70, 0, 110)
saveButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
saveButton.Text = "üíæ"
saveButton.TextColor3 = Color3.fromRGB(255, 255, 255)
saveButton.TextScaled = true
saveButton.Font = Enum.Font.Gotham
saveButton.Parent = mainFrame

local saveButtonCorner = Instance.new("UICorner")
saveButtonCorner.CornerRadius = UDim.new(0, 10)
saveButtonCorner.Parent = saveButton

local saveButtonStroke = Instance.new("UIStroke")
saveButtonStroke.Color = Color3.fromRGB(255, 255, 255)
saveButtonStroke.Thickness = 0.5
saveButtonStroke.Parent = saveButton

-- Lista de Grava√ß√µes Salvas
local savedRecordingsList = Instance.new("ScrollingFrame")
savedRecordingsList.Size = UDim2.new(1, 0, 0, 120)
savedRecordingsList.Position = UDim2.new(0, 0, 0, 150)
savedRecordingsList.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
savedRecordingsList.CanvasSize = UDim2.new(0, 0, 0, 0)
savedRecordingsList.ScrollBarThickness = 4
savedRecordingsList.Parent = mainFrame

local savedRecordingsListCorner = Instance.new("UICorner")
savedRecordingsListCorner.CornerRadius = UDim.new(0, 12)
savedRecordingsListCorner.Parent = savedRecordingsList

local savedRecordingsListStroke = Instance.new("UIStroke")
savedRecordingsListStroke.Color = Color3.fromRGB(255, 255, 255)
savedRecordingsListStroke.Thickness = 0.5
savedRecordingsListStroke.Transparency = 0.5
savedRecordingsListStroke.Parent = savedRecordingsList

local savedRecordingsListLayout = Instance.new("UIListLayout")
savedRecordingsListLayout.FillDirection = Enum.FillDirection.Vertical
savedRecordingsListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
savedRecordingsListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
savedRecordingsListLayout.Padding = UDim.new(0, 5)
savedRecordingsListLayout.Parent = savedRecordingsList

-- Frame para Lista de Clones (Popup)
local cloneListFrame = Instance.new("Frame")
cloneListFrame.Size = UDim2.new(0, 150, 0, 150)
cloneListFrame.Position = UDim2.new(0.5, -75, 0.5, -75)
cloneListFrame.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
cloneListFrame.Visible = false
cloneListFrame.Parent = screenGui

local cloneListFrameCorner = Instance.new("UICorner")
cloneListFrameCorner.CornerRadius = UDim.new(0, 12)
cloneListFrameCorner.Parent = cloneListFrame

local cloneListFrameStroke = Instance.new("UIStroke")
cloneListFrameStroke.Color = Color3.fromRGB(255, 255, 255)
cloneListFrameStroke.Thickness = 0.5
cloneListFrameStroke.Transparency = 0.5
cloneListFrameStroke.Parent = cloneListFrame

-- Lista de Clones
local cloneList = Instance.new("ScrollingFrame")
cloneList.Size = UDim2.new(0, 130, 0, 130)
cloneList.Position = UDim2.new(0, 10, 0, 10)
cloneList.BackgroundTransparency = 1
cloneList.CanvasSize = UDim2.new(0, 0, 0, 0)
cloneList.ScrollBarThickness = 4
cloneList.Parent = cloneListFrame

local cloneListLayout = Instance.new("UIListLayout")
cloneListLayout.FillDirection = Enum.FillDirection.Vertical
cloneListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
cloneListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
cloneListLayout.Padding = UDim.new(0, 5)
cloneListLayout.Parent = cloneList

-- Bot√£o Stop Spectate
local stopSpectateButton = Instance.new("TextButton")
stopSpectateButton.Size = UDim2.new(0, 40, 0, 40)
stopSpectateButton.Position = UDim2.new(1, -50, 0, 10)
stopSpectateButton.BackgroundColor3 = Color3.fromRGB(211, 47, 47)
stopSpectateButton.Text = "‚úñ"
stopSpectateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
stopSpectateButton.TextScaled = true
stopSpectateButton.Font = Enum.Font.Gotham
stopSpectateButton.Visible = false
stopSpectateButton.Parent = screenGui

local stopSpectateButtonCorner = Instance.new("UICorner")
stopSpectateButtonCorner.CornerRadius = UDim.new(0, 10)
stopSpectateButtonCorner.Parent = stopSpectateButton

local stopSpectateButtonStroke = Instance.new("UIStroke")
stopSpectateButtonStroke.Color = Color3.fromRGB(255, 255, 255)
stopSpectateButtonStroke.Thickness = 0.5
stopSpectateButtonStroke.Parent = stopSpectateButton

-- Vari√°veis de controle
local isRecording = false
local isPausedRecording = false
local recordings = {}
local startTime = 0
local elapsedTime = 0
local pausedTime = 0
local heartbeatConnection
local currentReplayCarModel = nil
local isPaused = false
local isLooping = false
local playbackSpeed = 1.0
local activeReplays = {}
local trackedParts = {}
local currentSpectatedClone = nil
local spectateConnection = nil
local savedRecordings = {}
local recordingCount = 0

-- Fun√ß√£o para formatar o tempo (MM:SS:MMM)
local function formatTime(timeInSeconds)
	local minutes = math.floor(timeInSeconds / 60)
	local seconds = math.floor(timeInSeconds % 60)
	local milliseconds = math.floor((timeInSeconds % 1) * 1000)
	return string.format("%02d:%02d:%03d", minutes, seconds, milliseconds)
end

-- Fun√ß√£o para encontrar o carro do jogador
local function getPlayerCar()
	local carCollection = Workspace:FindFirstChild("CarCollection")
	if carCollection then
		local playerCar = carCollection:FindFirstChild(player.Name)
		if playerCar then
			return playerCar:FindFirstChild("Car")
		end
	end
	return nil
end

-- Fun√ß√£o para detectar pe√ßas soltas no Workspace
local function detectDebris(car)
	local debrisParts = {}
	local carPosition = car and car.PrimaryPart and car.PrimaryPart.Position or Vector3.new(0, 0, 0)
	for _, part in pairs(Workspace:GetChildren()) do
		if part:IsA("BasePart") and part ~= car and not part:IsDescendantOf(car) and not part:IsDescendantOf(tempDebrisFolder) then
			local distance = (part.Position - carPosition).Magnitude
			if distance < 50 and not trackedParts[part] then
				local partClone = part:Clone()
				partClone.Name = "Debris_" .. #trackedParts
				partClone.Parent = tempDebrisFolder
				partClone.Anchored = true
				partClone.CanCollide = false
				trackedParts[part] = partClone
				trackedParts[partClone] = true
				debrisParts[partClone] = true
			end
		end
	end
	return debrisParts
end

-- Fun√ß√£o para gravar a√ß√µes de todas as partes e pe√ßas soltas
local function recordAllPartsActions()
	local car = getPlayerCar()
	if not car then
		playPauseButton.Text = "‚ñ∂"
		isRecording = false
		isPausedRecording = false
		if heartbeatConnection then
			heartbeatConnection:Disconnect()
		end
		return false
	end

	local partsData = {}
	local partIndex = {}
	for _, part in pairs(car:GetDescendants()) do
		if part:IsA("BasePart") then
			local partName = part.Name
			partIndex[partName] = (partIndex[partName] or 0) + 1
			local uniqueId = "Car_" .. partName .. "_" .. partIndex[partName]
			partsData[uniqueId] = {
				CFrame = part.CFrame,
				isActive = true
			}
		end
	end

	local debrisParts = detectDebris(car)
	for partClone, _ in pairs(debrisParts) do
		local uniqueId = "Debris_" .. partClone.Name
		partsData[uniqueId] = {
			CFrame = partClone.CFrame,
			isActive = true
		}
	end

	for originalPart, partClone in pairs(trackedParts) do
		if typeof(originalPart) == "Instance" and not originalPart.Parent then
			local uniqueId = "Debris_" .. partClone.Name
			partsData[uniqueId] = {
				CFrame = partClone.CFrame,
				isActive = false
			}
		end
	end

	if next(partsData) == nil then
		playPauseButton.Text = "‚ñ∂"
		isRecording = false
		isPausedRecording = false
		if heartbeatConnection then
			heartbeatConnection:Disconnect()
		end
		return false
	end

	local currentTime = os.clock() - startTime - pausedTime
	table.insert(recordings, {
		time = currentTime,
		parts = partsData
	})
	return true
end

-- Fun√ß√£o para atualizar o cron√¥metro
local function updateTimeLabel()
	if isRecording and not isPausedRecording then
		elapsedTime = os.clock() - startTime - pausedTime
		timeLabel.Text = formatTime(elapsedTime)
	end
end

-- Fun√ß√£o para obter o pr√≥ximo nome de ReplayCar
local function getNextReplayCarName()
	local carCount = 0
	for _, obj in pairs(carsReplayFolder:GetChildren()) do
		if obj.Name:match("^ReplayCar(%d+)$") or obj.Name:match("^SavedCar(%d+)$") then
			local num = tonumber(obj.Name:match("%d+$"))
			carCount = math.max(carCount, num)
		end
	end
	return "ReplayCar" .. (carCount + 1)
end

-- Fun√ß√£o para clonar e salvar o carro em CarsReplay
local function saveCarModel()
	local car = getPlayerCar()
	if not car then
		return nil
	end

	local carCopy = car:Clone()
	carCopy.Name = getNextReplayCarName()
	for _, part in pairs(carCopy:GetDescendants()) do
		if part:IsA("BasePart") then
			part.Anchored = false
			part.CanCollide = false
		elseif part:IsA("VehicleSeat") then
			part.Disabled = true
		elseif part:IsA("BodyVelocity") or part:IsA("BodyGyro") then
			part:Destroy()
		end
	end
	carCopy.Parent = carsReplayFolder
	return carCopy
end

-- Fun√ß√£o para destruir todas as c√≥pias do carro e pe√ßas no Workspace
local function destroyAllClones()
	for _, obj in pairs(Workspace:GetChildren()) do
		if obj.Name == "Clone" or obj.Name:match("^Clone%d+$") or obj.Name == "DebrisClone" or obj.Name:match("^DebrisClone%d+$") then
			obj:Destroy()
		end
	end
	tempDebrisFolder:ClearAllChildren()
	trackedParts = {}
	for _, replay in pairs(activeReplays) do
		if replay.connection then
			replay.connection:Disconnect()
		end
	end
	activeReplays = {}
	if currentSpectatedClone then
		stopSpectate()
	end
	updateCloneList()
end

-- Fun√ß√£o para duplicar o carro e criar clones de pe√ßas soltas
local function duplicateCarAndDebris(carModel, recordedParts)
	if not carModel then
		return nil, nil
	end

	local carCopy = carModel:Clone()
	local cloneCount = 0
	local existingClones = {}
	for _, obj in pairs(Workspace:GetChildren()) do
		if obj.Name == "Clone" or obj.Name:match("^Clone%d+$") then
			existingClones[obj.Name] = true
			if obj.Name:match("^Clone(%d+)$") then
				local num = tonumber(obj.Name:match("^Clone(%d+)$"))
				cloneCount = math.max(cloneCount, num + 1)
			else
				cloneCount = math.max(cloneCount, 1)
			end
		end
	end
	carCopy.Name = not existingClones["Clone"] and cloneCount == 0 and "Clone" or "Clone" .. cloneCount
	for _, part in pairs(carCopy:GetDescendants()) do
		if part:IsA("BasePart") then
			part.Anchored = true
			part.CanCollide = false
		elseif part:IsA("VehicleSeat") then
			part.Disabled = true
		elseif part:IsA("BodyVelocity") or part:IsA("BodyGyro") or part:IsA("CylindricalConstraint") or part:IsA("HingeConstraint") then
			part:Destroy()
		end
	end
	carCopy.Parent = Workspace

	local debrisClones = {}
	local debrisCloneCount = 0
	local existingDebrisClones = {}
	for _, obj in pairs(Workspace:GetChildren()) do
		if obj.Name == "DebrisClone" or obj.Name:match("^DebrisClone%d+$") then
			existingDebrisClones[obj.Name] = true
			if obj.Name:match("^DebrisClone(%d+)$") then
				local num = tonumber(obj.Name:match("^DebrisClone(%d+)$"))
				debrisCloneCount = math.max(debrisCloneCount, num + 1)
			else
				debrisCloneCount = math.max(debrisCloneCount, 1)
			end
		end
	end

	for uniqueId, _ in pairs(recordedParts) do
		if uniqueId:match("^Debris_") then
			local debrisName = uniqueId:match("^Debris_(.+)$")
			local originalDebris = tempDebrisFolder:FindFirstChild(debrisName)
			if originalDebris then
				local debrisCopy = originalDebris:Clone()
				debrisCopy.Name = not existingDebrisClones["DebrisClone"] and debrisCloneCount == 0 and "DebrisClone" or "DebrisClone" .. debrisCloneCount
				debrisCopy.Anchored = true
				debrisCopy.CanCollide = false
				debrisCopy.Parent = Workspace
				debrisClones[uniqueId] = debrisCopy
				debrisCloneCount = debrisCloneCount + 1
			end
		end
	end

	return carCopy, debrisClones
end

-- Fun√ß√£o para atualizar a lista de clones
local function updateCloneList()
	cloneList:ClearAllChildren()
	cloneList.CanvasSize = UDim2.new(0, 0, 0, 0)
	local height = 0
	for _, replay in pairs(activeReplays) do
		local cloneName = replay.carCopy and replay.carCopy.Name or "Unknown"
		local cloneButton = Instance.new("TextButton")
		cloneButton.Size = UDim2.new(0, 130, 0, 25)
		cloneButton.Position = UDim2.new(0, 0, 0, height)
		cloneButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
		cloneButton.Text = cloneName
		cloneButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		cloneButton.TextScaled = true
		cloneButton.Font = Enum.Font.Gotham
		cloneButton.Parent = cloneList

		local cloneButtonCorner = Instance.new("UICorner")
		cloneButtonCorner.CornerRadius = UDim.new(0, 8)
		cloneButtonCorner.Parent = cloneButton

		local cloneButtonStroke = Instance.new("UIStroke")
		cloneButtonStroke.Color = Color3.fromRGB(255, 255, 255)
		cloneButtonStroke.Thickness = 0.5
		cloneButtonStroke.Parent = cloneButton

		cloneButton.MouseButton1Click:Connect(function()
			if replay.carCopy then
				spectateClone(replay.carCopy)
				cloneListFrame.Visible = false
			end
		end)

		height = height + 30
	end
	cloneList.CanvasSize = UDim2.new(0, 0, 0, height)
end

-- Fun√ß√£o para atualizar a lista de grava√ß√µes salvas
local function updateSavedRecordingsList()
	savedRecordingsList:ClearAllChildren()
	savedRecordingsList.CanvasSize = UDim2.new(0, 0, 0, 0)
	local height = 0
	for _, saved in pairs(savedRecordings) do
		local recordingFrame = Instance.new("Frame")
		recordingFrame.Size = UDim2.new(1, -10, 0, 25)
		recordingFrame.Position = UDim2.new(0, 5, 0, height)
		recordingFrame.BackgroundTransparency = 1
		recordingFrame.Parent = savedRecordingsList

		local recordingLabel = Instance.new("TextLabel")
		recordingLabel.Size = UDim2.new(0, 300, 0, 25)
		recordingLabel.Position = UDim2.new(0, 0, 0, 0)
		recordingLabel.BackgroundTransparency = 1
		recordingLabel.Text = saved.id
		recordingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		recordingLabel.TextScaled = true
		recordingLabel.Font = Enum.Font.Gotham
		recordingLabel.Parent = recordingFrame

		local replaySavedButton = Instance.new("TextButton")
		replaySavedButton.Size = UDim2.new(0, 25, 0, 25)
		replaySavedButton.Position = UDim2.new(0, 310, 0, 0)
		replaySavedButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
		replaySavedButton.Text = "‚ñ∂"
		replaySavedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		replaySavedButton.TextScaled = true
		replaySavedButton.Font = Enum.Font.Gotham
		replaySavedButton.Parent = recordingFrame

		local replaySavedButtonCorner = Instance.new("UICorner")
		replaySavedButtonCorner.CornerRadius = UDim.new(0, 8)
		replaySavedButtonCorner.Parent = replaySavedButton

		local replaySavedButtonStroke = Instance.new("UIStroke")
		replaySavedButtonStroke.Color = Color3.fromRGB(255, 255, 255)
		replaySavedButtonStroke.Thickness = 0.5
		replaySavedButtonStroke.Parent = replaySavedButton

		replaySavedButton.MouseButton1Click:Connect(function()
			replayAllPartsActions(saved.recordings, saved.carModel)
		end)

		local deleteSavedButton = Instance.new("TextButton")
		deleteSavedButton.Size = UDim2.new(0, 25, 0, 25)
		deleteSavedButton.Position = UDim2.new(0, 340, 0, 0)
		deleteSavedButton.BackgroundColor3 = Color3.fromRGB(211, 47, 47)
		deleteSavedButton.Text = "‚úñ"
		deleteSavedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		deleteSavedButton.TextScaled = true
		deleteSavedButton.Font = Enum.Font.Gotham
		deleteSavedButton.Parent = recordingFrame

		local deleteSavedButtonCorner = Instance.new("UICorner")
		deleteSavedButtonCorner.CornerRadius = UDim.new(0, 8)
		deleteSavedButtonCorner.Parent = deleteSavedButton

		local deleteSavedButtonStroke = Instance.new("UIStroke")
		deleteSavedButtonStroke.Color = Color3.fromRGB(255, 255, 255)
		deleteSavedButtonStroke.Thickness = 0.5
		deleteSavedButtonStroke.Parent = deleteSavedButton

		deleteSavedButton.MouseButton1Click:Connect(function()
			for i, s in ipairs(savedRecordings) do
				if s.id == saved.id then
					if s.carModel then
						s.carModel:Destroy()
					end
					table.remove(savedRecordings, i)
					break
				end
			end
			updateSavedRecordingsList()
		end)

		height = height + 30
	end
	savedRecordingsList.CanvasSize = UDim2.new(0, 0, 0, height)
end

-- Fun√ß√£o para salvar uma grava√ß√£o
local function saveRecording()
	if not currentReplayCarModel or #recordings == 0 then
		saveButton.Text = "No Data!"
		task.wait(1)
		saveButton.Text = "üíæ"
		return
	end

	recordingCount = recordingCount + 1
	local recordingId = "Recording" .. recordingCount
	local carModelCopy = currentReplayCarModel:Clone()
	if not carModelCopy then
		saveButton.Text = "Car Error!"
		task.wait(1)
		saveButton.Text = "üíæ"
		return
	end
	carModelCopy.Name = "SavedCar" .. recordingCount
	carModelCopy.Parent = carsReplayFolder

	local savedRecordingsCopy = {}
	for _, frame in ipairs(recordings) do
		local partsCopy = {}
		for uniqueId, data in pairs(frame.parts) do
			partsCopy[uniqueId] = {
				CFrame = CFrame.new(data.CFrame.Position, data.CFrame:ToWorldSpace(CFrame.new()).LookVector),
				isActive = data.isActive
			}
		end
		table.insert(savedRecordingsCopy, {
			time = frame.time,
			parts = partsCopy
		})
	end

	table.insert(savedRecordings, {
		id = recordingId,
		carModel = carModelCopy,
		recordings = savedRecordingsCopy
	})
	updateSavedRecordingsList()
	saveButton.Text = "Saved!"
	task.wait(1)
	saveButton.Text = "üíæ"
end

-- Fun√ß√£o para spectar um clone
local function spectateClone(clone)
	if not clone or not clone.Parent then
		spectateButton.Text = "No Clone!"
		task.wait(1)
		spectateButton.Text = "üëÅ"
		return
	end

	local bodyPart = clone:FindFirstChild("Body")
	if not bodyPart then
		spectateButton.Text = "No Body!"
		task.wait(1)
		spectateButton.Text = "üëÅ"
		return
	end

	stopSpectate()
	currentSpectatedClone = clone
	Camera.CameraType = Enum.CameraType.Scriptable
	stopSpectateButton.Visible = true

	spectateConnection = RunService.RenderStepped:Connect(function()
		if not currentSpectatedClone or not currentSpectatedClone.Parent or not currentSpectatedClone:FindFirstChild("Body") then
			stopSpectate()
			return
		end

		local bodyPart = currentSpectatedClone:FindFirstChild("Body")
		local offset = CFrame.new(0, 5, -10)
		local cameraCFrame = bodyPart.CFrame * offset
		Camera.CFrame = cameraCFrame
	end)
end

-- Fun√ß√£o para parar de spectar
local function stopSpectate()
	if spectateConnection then
		spectateConnection:Disconnect()
		spectateConnection = nil
	end
	currentSpectatedClone = nil
	Camera.CameraType = Enum.CameraType.Custom
	Camera.CameraSubject = player.Character and player.Character:FindFirstChild("Humanoid")
	stopSpectateButton.Visible = false
	spectateButton.Text = "üëÅ"
end

-- Fun√ß√£o para reproduzir as grava√ß√µes em um clone espec√≠fico
local function replayAllPartsActions(recordingsToPlay, carModel)
	if #recordingsToPlay == 0 then
		replayButton.Text = "No Data!"
		task.wait(1)
		replayButton.Text = "üîÑ"
		return
	end

	local recordedParts = recordingsToPlay[1].parts
	local carCopy, debrisClones = duplicateCarAndDebris(carModel, recordedParts)
	if not carCopy then
		replayButton.Text = "No Car!"
		task.wait(1)
		replayButton.Text = "üîÑ"
		return
	end

	local partsMap = {}
	local partIndex = {}
	for _, part in pairs(carCopy:GetDescendants()) do
		if part:IsA("BasePart") then
			local partName = part.Name
			partIndex[partName] = (partIndex[partName] or 0) + 1
			local uniqueId = "Car_" .. partName .. "_" .. partIndex[partName]
			partsMap[uniqueId] = part
		end
	end
	for uniqueId, debrisPart in pairs(debrisClones) do
		partsMap[uniqueId] = debrisPart
	end

	if next(partsMap) == nil then
		replayButton.Text = "No Parts!"
		task.wait(1)
		replayButton.Text = "üîÑ"
		carCopy:Destroy()
		for _, debrisPart in pairs(debrisClones) do
			debrisPart:Destroy()
		end
		return
	end

	local replayData = {
		carCopy = carCopy,
		debrisClones = debrisClones,
		partsMap = partsMap,
		recordings = recordingsToPlay,
		startTime = os.clock(),
		currentIndex = 1,
		pausedTime = 0,
		connection = nil
	}
	table.insert(activeReplays, replayData)
	updateCloneList()

	local function playReplay()
		replayData.connection = RunService.Heartbeat:Connect(function()
			if isPaused then
				return
			end

			local adjustedTime = (os.clock() - replayData.startTime - replayData.pausedTime) * playbackSpeed
			if replayData.currentIndex > #recordingsToPlay then
				if isLooping then
					replayData.currentIndex = 1
					replayData.startTime = os.clock()
					replayData.pausedTime = 0
					adjustedTime = 0
					for uniqueId, debrisPart in pairs(replayData.debrisClones) do
						if not debrisPart.Parent then
							local debrisName = uniqueId:match("^Debris_(.+)$")
							local originalDebris = tempDebrisFolder:FindFirstChild(debrisName)
							if originalDebris then
								local newDebrisCopy = originalDebris:Clone()
								newDebrisCopy.Name = debrisPart.Name
								newDebrisCopy.Anchored = true
								newDebrisCopy.CanCollide = false
								newDebrisCopy.Parent = Workspace
								replayData.debrisClones[uniqueId] = newDebrisCopy
								replayData.partsMap[uniqueId] = newDebrisCopy
							end
						end
					end
				else
					if replayData.connection then
						replayData.connection:Disconnect()
						replayData.connection = nil
					end
					for i, activeReplay in ipairs(activeReplays) do
						if activeReplay == replayData then
							table.remove(activeReplays, i)
							break
						end
					end
					updateCloneList()
					if currentSpectatedClone == carCopy then
						stopSpectate()
					end
					return
				end
			end

			while replayData.currentIndex <= #recordingsToPlay and recordingsToPlay[replayData.currentIndex].time <= adjustedTime do
				replayData.currentIndex = replayData.currentIndex + 1
			end

			local prevFrame = recordingsToPlay[math.max(1, replayData.currentIndex - 1)]
			local nextFrame = recordingsToPlay[replayData.currentIndex] or prevFrame
			local t = nextFrame.time == prevFrame.time and 1 or (adjustedTime - prevFrame.time) / (nextFrame.time - prevFrame.time)
			t = math.clamp(t, 0, 1)

			for uniqueId, part in pairs(replayData.partsMap) do
				local prevData = prevFrame.parts[uniqueId]
				local nextData = nextFrame.parts[uniqueId]
				if prevData and nextData then
					if nextData.isActive and part.Parent then
						local lerpedCFrame = prevData.CFrame:Lerp(nextData.CFrame, t)
						part.CFrame = lerpedCFrame
					elseif not nextData.isActive and part.Parent then
						part:Destroy()
						replayData.partsMap[uniqueId] = nil
						if replayData.debrisClones[uniqueId] then
							replayData.debrisClones[uniqueId] = nil
						end
					end
				end
			end
		end)
	end

	playReplay()
end

-- Conex√£o do bot√£o principal
mainButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = not mainFrame.Visible
end)

-- Conex√£o do bot√£o Play/Pause
playPauseButton.MouseButton1Click:Connect(function()
	if not isRecording then
		isRecording = true
		isPausedRecording = false
		recordings = {}
		trackedParts = {}
		tempDebrisFolder:ClearAllChildren()
		startTime = os.clock()
		pausedTime = 0
		elapsedTime = 0
		timeLabel.Text = "00:00:000"
		currentReplayCarModel = saveCarModel()
		if not currentReplayCarModel then
			playPauseButton.Text = "‚ñ∂"
			isRecording = false
			return
		end
		heartbeatConnection = RunService.Heartbeat:Connect(function()
			if not isPausedRecording then
				if recordAllPartsActions() then
					updateTimeLabel()
				end
			end
		end)
		playPauseButton.Text = "‚è∏"
	else
		isPausedRecording = not isPausedRecording
		if isPausedRecording then
			pausedTime = os.clock() - startTime - elapsedTime
			playPauseButton.Text = "‚ñ∂"
		else
			startTime = os.clock() - elapsedTime - pausedTime
			playPauseButton.Text = "‚è∏"
		end
	end
end)

-- Conex√£o do bot√£o Stop
stopButton.MouseButton1Click:Connect(function()
	if isRecording then
		isRecording = false
		isPausedRecording = false
		if heartbeatConnection then
			heartbeatConnection:Disconnect()
			heartbeatConnection = nil
		end
		playPauseButton.Text = "‚ñ∂"
	end
end)

-- Conex√£o do bot√£o Clear
clearButton.MouseButton1Click:Connect(function()
	recordings = {}
	elapsedTime = 0
	pausedTime = 0
	timeLabel.Text = "00:00:000"
	currentReplayCarModel = nil
	tempDebrisFolder:ClearAllChildren()
	trackedParts = {}
end)

-- Conex√£o do bot√£o Replay
replayButton.MouseButton1Click:Connect(function()
	if currentReplayCarModel and #recordings > 0 then
		replayAllPartsActions(recordings, currentReplayCarModel)
	end
end)

-- Conex√£o do bot√£o Delete Clones
deleteClonesButton.MouseButton1Click:Connect(function()
	destroyAllClones()
end)

-- Conex√£o do bot√£o Pause (para replays)
pauseButton.MouseButton1Click:Connect(function()
	isPaused = not isPaused
	for _, replay in pairs(activeReplays) do
		if isPaused then
			replay.pausedTime = os.clock() - replay.startTime - (replay.pausedTime or 0)
		else
			replay.startTime = os.clock() - (replay.pausedTime or 0)
		end
	end
	pauseButton.Text = isPaused and "‚ñ∂" or "‚è∏"
end)

-- Conex√£o do bot√£o Loop
loopButton.MouseButton1Click:Connect(function()
	isLooping = not isLooping
	loopButton.BackgroundColor3 = isLooping and Color3.fromRGB(46, 204, 113) or Color3.fromRGB(52, 120, 246)
end)

-- Conex√£o do campo de Slowmotion
slowmotionInput:GetPropertyChangedSignal("Text"):Connect(function()
	local inputText = slowmotionInput.Text
	local speed = tonumber(inputText:match("^x?([0-9.]+)$"))
	if speed then
		playbackSpeed = math.clamp(speed, 0.1, 10.0)
		slowmotionInput.Text = "x" .. string.format("%.1f", playbackSpeed)
	else
		slowmotionInput.Text = "x" .. string.format("%.1f", playbackSpeed)
	end
end)

-- Conex√£o do bot√£o Spectate
spectateButton.MouseButton1Click:Connect(function()
	cloneListFrame.Visible = not cloneListFrame.Visible
	updateCloneList()
end)

-- Conex√£o do bot√£o Save
saveButton.MouseButton1Click:Connect(function()
	saveRecording()
end)

-- Conex√£o do bot√£o Stop Spectate
stopSpectateButton.MouseButton1Click:Connect(function()
	stopSpectate()
end)

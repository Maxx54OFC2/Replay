local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Criar pasta CarsReplay em ReplicatedStorage
local carsReplayFolder = Instance.new("Folder")
carsReplayFolder.Name = "CarsReplay"
carsReplayFolder.Parent = ReplicatedStorage

-- Criar pasta TempDebris no Workspace para peças soltas
local tempDebrisFolder = Instance.new("Folder")
tempDebrisFolder.Name = "TempDebris"
tempDebrisFolder.Parent = Workspace

-- Criar ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui
screenGui.Enabled = true

-- Criar Botão para Recording
local recordingButton = Instance.new("TextButton")
recordingButton.Size = UDim2.new(0, 50, 0, 50)
recordingButton.Position = UDim2.new(0.1, 0, 0.1, 0)
recordingButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
recordingButton.Text = "Rec"
recordingButton.TextColor3 = Color3.fromRGB(255, 255, 255)
recordingButton.TextScaled = true
recordingButton.Font = Enum.Font.Gotham
recordingButton.Parent = screenGui
recordingButton.Draggable = true
recordingButton.Active = true
recordingButton.Selectable = true
recordingButton.Visible = true

local recordingButtonCorner = Instance.new("UICorner")
recordingButtonCorner.CornerRadius = UDim.new(0, 8)
recordingButtonCorner.Parent = recordingButton

local recordingButtonStroke = Instance.new("UIStroke")
recordingButtonStroke.Color = Color3.fromRGB(52, 120, 246)
recordingButtonStroke.Thickness = 2
recordingButtonStroke.Transparency = 0.5
recordingButtonStroke.Parent = recordingButton

-- Criar Botão para Saved Recordings
local savedButton = Instance.new("TextButton")
savedButton.Size = UDim2.new(0, 50, 0, 50)
savedButton.Position = UDim2.new(0.1, 60, 0.1, 0)
savedButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
savedButton.Text = "Sav"
savedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
savedButton.TextScaled = true
savedButton.Font = Enum.Font.Gotham
savedButton.Parent = screenGui
savedButton.Draggable = true
savedButton.Active = true
savedButton.Selectable = true
savedButton.Visible = true

local savedButtonCorner = Instance.new("UICorner")
savedButtonCorner.CornerRadius = UDim.new(0, 8)
savedButtonCorner.Parent = savedButton

local savedButtonStroke = Instance.new("UIStroke")
savedButtonStroke.Color = Color3.fromRGB(52, 120, 246)
savedButtonStroke.Thickness = 2
savedButtonStroke.Transparency = 0.5
savedButtonStroke.Parent = savedButton

-- Criar Frame do Menu Recording
local recordingFrame = Instance.new("Frame")
recordingFrame.Size = UDim2.new(0, 400, 0, 200)
recordingFrame.Position = UDim2.new(0.1, 60, 0, 10)
recordingFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
recordingFrame.Visible = false
recordingFrame.Active = true
recordingFrame.Draggable = true
recordingFrame.Parent = screenGui

local recordingFrameCorner = Instance.new("UICorner")
recordingFrameCorner.CornerRadius = UDim.new(0, 12)
recordingFrameCorner.Parent = recordingFrame

local recordingFrameStroke = Instance.new("UIStroke")
recordingFrameStroke.Color = Color3.fromRGB(0, 0, 0)
recordingFrameStroke.Thickness = 1
recordingFrameStroke.Transparency = 0.5
recordingFrameStroke.Parent = recordingFrame

-- Título "Recording"
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -20, 0, 30)
titleLabel.Position = UDim2.new(0, 10, 0, 5)
titleLabel.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
titleLabel.Text = "Recording"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.Gotham
titleLabel.Parent = recordingFrame

local titleLabelCorner = Instance.new("UICorner")
titleLabelCorner.CornerRadius = UDim.new(0, 8)
titleLabelCorner.Parent = titleLabel

local titleLabelStroke = Instance.new("UIStroke")
titleLabelStroke.Color = Color3.fromRGB(0, 0, 0)
titleLabelStroke.Thickness = 1
titleLabelStroke.Transparency = 0.5
titleLabelStroke.Parent = titleLabel

-- Seção de Gravação
local recordingSection = Instance.new("Frame")
recordingSection.Size = UDim2.new(1, -20, 0, 60)
recordingSection.Position = UDim2.new(0, 10, 0, 40)
recordingSection.BackgroundTransparency = 1
recordingSection.Parent = recordingFrame

local recordingSectionList = Instance.new("UIListLayout")
recordingSectionList.FillDirection = Enum.FillDirection.Horizontal
recordingSectionList.HorizontalAlignment = Enum.HorizontalAlignment.Left
recordingSectionList.VerticalAlignment = Enum.VerticalAlignment.Center
recordingSectionList.Padding = UDim.new(0, 10)
recordingSectionList.Parent = recordingSection

-- Contador de Tempo
local timeLabel = Instance.new("TextLabel")
timeLabel.Size = UDim2.new(0, 120, 0, 30)
timeLabel.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
timeLabel.Text = "00:00:000"
timeLabel.TextColor3 = Color3.fromRGB(176, 176, 176)
timeLabel.TextScaled = true
timeLabel.Font = Enum.Font.Gotham
timeLabel.Parent = recordingSection

local timeLabelCorner = Instance.new("UICorner")
timeLabelCorner.CornerRadius = UDim.new(0, 6)
timeLabelCorner.Parent = timeLabel

local timeLabelStroke = Instance.new("UIStroke")
timeLabelStroke.Color = Color3.fromRGB(0, 0, 0)
timeLabelStroke.Thickness = 1
timeLabelStroke.Transparency = 0.5
timeLabelStroke.Parent = timeLabel

-- Botão Play/Pause
local playPauseButton = Instance.new("TextButton")
playPauseButton.Size = UDim2.new(0, 50, 0, 50)
playPauseButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
playPauseButton.Text = "▶"
playPauseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
playPauseButton.TextScaled = true
playPauseButton.Font = Enum.Font.Gotham
playPauseButton.Parent = recordingSection

local playPauseButtonCorner = Instance.new("UICorner")
playPauseButtonCorner.CornerRadius = UDim.new(0, 8)
playPauseButtonCorner.Parent = playPauseButton

local playPauseButtonStroke = Instance.new("UIStroke")
playPauseButtonStroke.Color = Color3.fromRGB(255, 255, 255)
playPauseButtonStroke.Thickness = 1
playPauseButtonStroke.Parent = playPauseButton

-- Botão Stop
local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(0, 50, 0, 50)
stopButton.BackgroundColor3 = Color3.fromRGB(211, 47, 47)
stopButton.Text = ""
stopButton.Parent = recordingSection

local stopButtonCorner = Instance.new("UICorner")
stopButtonCorner.CornerRadius = UDim.new(0, 8)
stopButtonCorner.Parent = stopButton

local stopButtonStroke = Instance.new("UIStroke")
stopButtonStroke.Color = Color3.fromRGB(255, 255, 255)
stopButtonStroke.Thickness = 1
stopButtonStroke.Parent = stopButton

local stopButtonInnerSquare = Instance.new("Frame")
stopButtonInnerSquare.Size = UDim2.new(0, 20, 0, 20)
stopButtonInnerSquare.Position = UDim2.new(0.5, -10, 0.5, -10)
stopButtonInnerSquare.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
stopButtonInnerSquare.Parent = stopButton

local stopButtonInnerSquareCorner = Instance.new("UICorner")
stopButtonInnerSquareCorner.CornerRadius = UDim.new(0, 4)
stopButtonInnerSquareCorner.Parent = stopButtonInnerSquare

-- Botão Clear
local clearButton = Instance.new("TextButton")
clearButton.Size = UDim2.new(0, 50, 0, 50)
clearButton.BackgroundColor3 = Color3.fromRGB(211, 47, 47)
clearButton.Text = "Clear"
clearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
clearButton.TextScaled = true
clearButton.Font = Enum.Font.Gotham
clearButton.Parent = recordingSection

local clearButtonCorner = Instance.new("UICorner")
clearButtonCorner.CornerRadius = UDim.new(0, 8)
clearButtonCorner.Parent = clearButton

local clearButtonStroke = Instance.new("UIStroke")
clearButtonStroke.Color = Color3.fromRGB(255, 255, 255)
clearButtonStroke.Thickness = 1
clearButtonStroke.Parent = clearButton

-- Seção de Replay
local replaySection = Instance.new("Frame")
replaySection.Size = UDim2.new(1, -20, 0, 90)
replaySection.Position = UDim2.new(0, 10, 0, 110)
replaySection.BackgroundTransparency = 1
replaySection.Parent = recordingFrame

local replaySectionList = Instance.new("UIListLayout")
replaySectionList.FillDirection = Enum.FillDirection.Horizontal
replaySectionList.HorizontalAlignment = Enum.HorizontalAlignment.Left
replaySectionList.VerticalAlignment = Enum.VerticalAlignment.Top
replaySectionList.Padding = UDim.new(0, 10)
replaySectionList.Parent = replaySection

-- Botão Replay
local replayButton = Instance.new("TextButton")
replayButton.Size = UDim2.new(0, 50, 0, 50)
replayButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
replayButton.Text = "Replay"
replayButton.TextColor3 = Color3.fromRGB(255, 255, 255)
replayButton.TextScaled = true
replayButton.Font = Enum.Font.Gotham
replayButton.Parent = replaySection

local replayButtonCorner = Instance.new("UICorner")
replayButtonCorner.CornerRadius = UDim.new(0, 8)
replayButtonCorner.Parent = replayButton

local replayButtonStroke = Instance.new("UIStroke")
replayButtonStroke.Color = Color3.fromRGB(255, 255, 255)
replayButtonStroke.Thickness = 1
replayButtonStroke.Parent = replayButton

-- Botão Delete Clones
local deleteClonesButton = Instance.new("TextButton")
deleteClonesButton.Size = UDim2.new(0, 50, 0, 50)
deleteClonesButton.BackgroundColor3 = Color3.fromRGB(211, 47, 47)
deleteClonesButton.Text = "Del"
deleteClonesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
deleteClonesButton.TextScaled = true
deleteClonesButton.Font = Enum.Font.Gotham
deleteClonesButton.Parent = replaySection

local deleteClonesButtonCorner = Instance.new("UICorner")
deleteClonesButtonCorner.CornerRadius = UDim.new(0, 8)
deleteClonesButtonCorner.Parent = deleteClonesButton

local deleteClonesButtonStroke = Instance.new("UIStroke")
deleteClonesButtonStroke.Color = Color3.fromRGB(255, 255, 255)
deleteClonesButtonStroke.Thickness = 1
deleteClonesButtonStroke.Parent = deleteClonesButton

-- Botão Pause (para replays)
local pauseButton = Instance.new("TextButton")
pauseButton.Size = UDim2.new(0, 50, 0, 50)
pauseButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
pauseButton.Text = "Pause"
pauseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
pauseButton.TextScaled = true
pauseButton.Font = Enum.Font.Gotham
pauseButton.Parent = replaySection

local pauseButtonCorner = Instance.new("UICorner")
pauseButtonCorner.CornerRadius = UDim.new(0, 8)
pauseButtonCorner.Parent = pauseButton

local pauseButtonStroke = Instance.new("UIStroke")
pauseButtonStroke.Color = Color3.fromRGB(255, 255, 255)
pauseButtonStroke.Thickness = 1
pauseButtonStroke.Parent = pauseButton

-- Botão Loop
local loopButton = Instance.new("TextButton")
loopButton.Size = UDim2.new(0, 50, 0, 50)
loopButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
loopButton.Text = "Loop"
loopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
loopButton.TextScaled = true
loopButton.Font = Enum.Font.Gotham
loopButton.Parent = replaySection

local loopButtonCorner = Instance.new("UICorner")
loopButtonCorner.CornerRadius = UDim.new(0, 8)
loopButtonCorner.Parent = loopButton

local loopButtonStroke = Instance.new("UIStroke")
loopButtonStroke.Color = Color3.fromRGB(255, 255, 255)
loopButtonStroke.Thickness = 1
loopButtonStroke.Parent = loopButton

-- Campo de entrada para Slowmotion
local slowmotionInput = Instance.new("TextBox")
slowmotionInput.Size = UDim2.new(0, 50, 0, 50)
slowmotionInput.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
slowmotionInput.Text = "1.0"
slowmotionInput.TextColor3 = Color3.fromRGB(255, 255, 255)
slowmotionInput.TextScaled = true
slowmotionInput.Font = Enum.Font.Gotham
slowmotionInput.Parent = replaySection

local slowmotionInputCorner = Instance.new("UICorner")
slowmotionInputCorner.CornerRadius = UDim.new(0, 8)
slowmotionInputCorner.Parent = slowmotionInput

local slowmotionInputStroke = Instance.new("UIStroke")
slowmotionInputStroke.Color = Color3.fromRGB(52, 120, 246)
slowmotionInputStroke.Thickness = 1
slowmotionInputStroke.Parent = slowmotionInput

-- Frame para Spectate
local spectateFrame = Instance.new("Frame")
spectateFrame.Size = UDim2.new(0, 80, 0, 80)
spectateFrame.Position = UDim2.new(0, 290, 0, 5)
spectateFrame.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
spectateFrame.Parent = replaySection

local spectateFrameCorner = Instance.new("UICorner")
spectateFrameCorner.CornerRadius = UDim.new(0, 8)
spectateFrameCorner.Parent = spectateFrame

local spectateFrameStroke = Instance.new("UIStroke")
spectateFrameStroke.Color = Color3.fromRGB(0, 0, 0)
spectateFrameStroke.Thickness = 1
spectateFrameStroke.Transparency = 0.5
spectateFrameStroke.Parent = spectateFrame

-- Botão Spectate
local spectateButton = Instance.new("TextButton")
spectateButton.Size = UDim2.new(0, 60, 0, 30)
spectateButton.Position = UDim2.new(0, 10, 0, 5)
spectateButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
spectateButton.Text = "Spectate"
spectateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
spectateButton.TextScaled = true
spectateButton.Font = Enum.Font.Gotham
spectateButton.Parent = spectateFrame

local spectateButtonCorner = Instance.new("UICorner")
spectateButtonCorner.CornerRadius = UDim.new(0, 8)
spectateButtonCorner.Parent = spectateButton

local spectateButtonStroke = Instance.new("UIStroke")
spectateButtonStroke.Color = Color3.fromRGB(255, 255, 255)
spectateButtonStroke.Thickness = 1
spectateButtonStroke.Parent = spectateButton

-- Lista de Clones
local cloneList = Instance.new("ScrollingFrame")
cloneList.Size = UDim2.new(0, 80, 0, 80)
cloneList.Position = UDim2.new(0, 0, 0, 40)
cloneList.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
cloneList.CanvasSize = UDim2.new(0, 0, 0, 0)
cloneList.ScrollBarThickness = 4
cloneList.Visible = false
cloneList.Parent = spectateFrame

local cloneListCorner = Instance.new("UICorner")
cloneListCorner.CornerRadius = UDim.new(0, 8)
cloneListCorner.Parent = cloneList

local cloneListLayout = Instance.new("UIListLayout")
cloneListLayout.FillDirection = Enum.FillDirection.Vertical
cloneListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
cloneListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
cloneListLayout.Padding = UDim.new(0, 5)
cloneListLayout.Parent = cloneList

-- Criar Frame do Menu Saved Recordings
local savedRecordingsFrame = Instance.new("Frame")
savedRecordingsFrame.Size = UDim2.new(0, 200, 0, 200)
savedRecordingsFrame.Position = UDim2.new(0.1, 470, 0, 10)
savedRecordingsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
savedRecordingsFrame.Visible = false
savedRecordingsFrame.Active = true
savedRecordingsFrame.Draggable = true
savedRecordingsFrame.Parent = screenGui

local savedRecordingsFrameCorner = Instance.new("UICorner")
savedRecordingsFrameCorner.CornerRadius = UDim.new(0, 12)
savedRecordingsFrameCorner.Parent = savedRecordingsFrame

local savedRecordingsFrameStroke = Instance.new("UIStroke")
savedRecordingsFrameStroke.Color = Color3.fromRGB(0, 0, 0)
savedRecordingsFrameStroke.Thickness = 1
savedRecordingsFrameStroke.Transparency = 0.5
savedRecordingsFrameStroke.Parent = savedRecordingsFrame

-- Título "Saved Recordings"
local savedTitleLabel = Instance.new("TextLabel")
savedTitleLabel.Size = UDim2.new(1, -20, 0, 30)
savedTitleLabel.Position = UDim2.new(0, 10, 0, 5)
savedTitleLabel.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
savedTitleLabel.Text = "Saved Recordings"
savedTitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
savedTitleLabel.TextScaled = true
savedTitleLabel.Font = Enum.Font.Gotham
savedTitleLabel.Parent = savedRecordingsFrame

local savedTitleLabelCorner = Instance.new("UICorner")
savedTitleLabelCorner.CornerRadius = UDim.new(0, 8)
savedTitleLabelCorner.Parent = savedTitleLabel

local savedTitleLabelStroke = Instance.new("UIStroke")
savedTitleLabelStroke.Color = Color3.fromRGB(0, 0, 0)
savedTitleLabelStroke.Thickness = 1
savedTitleLabelStroke.Transparency = 0.5
savedTitleLabelStroke.Parent = savedTitleLabel

-- Botão Save
local saveButton = Instance.new("TextButton")
saveButton.Size = UDim2.new(0, 60, 0, 30)
saveButton.Position = UDim2.new(0, 10, 0, 40)
saveButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
saveButton.Text = "Save"
saveButton.TextColor3 = Color3.fromRGB(255, 255, 255)
saveButton.TextScaled = true
saveButton.Font = Enum.Font.Gotham
saveButton.Parent = savedRecordingsFrame

local saveButtonCorner = Instance.new("UICorner")
saveButtonCorner.CornerRadius = UDim.new(0, 8)
saveButtonCorner.Parent = saveButton

local saveButtonStroke = Instance.new("UIStroke")
saveButtonStroke.Color = Color3.fromRGB(255, 255, 255)
saveButtonStroke.Thickness = 1
saveButtonStroke.Parent = saveButton

-- Lista de Gravações Salvas
local savedRecordingsList = Instance.new("ScrollingFrame")
savedRecordingsList.Size = UDim2.new(1, -20, 0, 120)
savedRecordingsList.Position = UDim2.new(0, 10, 0, 80)
savedRecordingsList.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
savedRecordingsList.CanvasSize = UDim2.new(0, 0, 0, 0)
savedRecordingsList.ScrollBarThickness = 4
savedRecordingsList.Parent = savedRecordingsFrame

local savedRecordingsListCorner = Instance.new("UICorner")
savedRecordingsListCorner.CornerRadius = UDim.new(0, 8)
savedRecordingsListCorner.Parent = savedRecordingsList

local savedRecordingsListLayout = Instance.new("UIListLayout")
savedRecordingsListLayout.FillDirection = Enum.FillDirection.Vertical
savedRecordingsListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
savedRecordingsListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
savedRecordingsListLayout.Padding = UDim.new(0, 5)
savedRecordingsListLayout.Parent = savedRecordingsList

-- Botão Stop Spectate
local stopSpectateButton = Instance.new("TextButton")
stopSpectateButton.Size = UDim2.new(0, 50, 0, 50)
stopSpectateButton.Position = UDim2.new(1, -60, 0, 10)
stopSpectateButton.BackgroundColor3 = Color3.fromRGB(211, 47, 47)
stopSpectateButton.Text = "Stop"
stopSpectateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
stopSpectateButton.TextScaled = true
stopSpectateButton.Font = Enum.Font.Gotham
stopSpectateButton.Visible = false
stopSpectateButton.Parent = screenGui

local stopSpectateButtonCorner = Instance.new("UICorner")
stopSpectateButtonCorner.CornerRadius = UDim.new(0, 8)
stopSpectateButtonCorner.Parent = stopSpectateButton

local stopSpectateButtonStroke = Instance.new("UIStroke")
stopSpectateButtonStroke.Color = Color3.fromRGB(255, 255, 255)
stopSpectateButtonStroke.Thickness = 1
stopSpectateButtonStroke.Parent = stopSpectateButton

-- Variáveis de controle
local isRecording = false
local isPausedRecording = false
local recordings = {}
local startTime = 0
local elapsedTime = 0
local pausedTime = 0
local heartbeatConnection
local currentReplayCarModel = nil
local isPaused = false
local isLooping = false
local playbackSpeed = 1.0
local activeReplays = {}
local trackedParts = {}
local currentSpectatedClone = nil
local spectateConnection = nil
local savedRecordings = {}
local recordingCount = 0

-- Função para formatar o tempo (MM:SS:MMM)
local function formatTime(timeInSeconds)
	local minutes = math.floor(timeInSeconds / 60)
	local seconds = math.floor(timeInSeconds % 60)
	local milliseconds = math.floor((timeInSeconds % 1) * 1000)
	return string.format("%02d:%02d:%03d", minutes, seconds, milliseconds)
end

-- Função para encontrar o carro do jogador
local function getPlayerCar()
	local carCollection = Workspace:FindFirstChild("CarCollection")
	if carCollection then
		local playerCar = carCollection:FindFirstChild(player.Name)
		if playerCar then
			return playerCar:FindFirstChild("Car")
		end
	end
	return nil
end

-- Função para detectar peças soltas no Workspace
local function detectDebris(car)
	local debrisParts = {}
	local carPosition = car and car.PrimaryPart and car.PrimaryPart.Position or Vector3.new(0, 0, 0)
	for _, part in pairs(Workspace:GetChildren()) do
		if part:IsA("BasePart") and part ~= car and not part:IsDescendantOf(car) and not part:IsDescendantOf(tempDebrisFolder) then
			local distance = (part.Position - carPosition).Magnitude
			if distance < 50 and not trackedParts[part] then
				local partClone = part:Clone()
				partClone.Name = "Debris_" .. #trackedParts
				partClone.Parent = tempDebrisFolder
				partClone.Anchored = true
				partClone.CanCollide = false
				trackedParts[part] = partClone
				trackedParts[partClone] = true
				debrisParts[partClone] = true
			end
		end
	end
	return debrisParts
end

-- Função para gravar ações de todas as partes e peças soltas
local function recordAllPartsActions()
	local car = getPlayerCar()
	if not car then
		playPauseButton.Text = "▶"
		isRecording = false
		isPausedRecording = false
		if heartbeatConnection then
			heartbeatConnection:Disconnect()
		end
		return false
	end

	local partsData = {}
	local partIndex = {}
	for _, part in pairs(car:GetDescendants()) do
		if part:IsA("BasePart") then
			local partName = part.Name
			partIndex[partName] = (partIndex[partName] or 0) + 1
			local uniqueId = "Car_" .. partName .. "_" .. partIndex[partName]
			partsData[uniqueId] = {
				CFrame = part.CFrame,
				isActive = true
			}
		end
	end

	local debrisParts = detectDebris(car)
	for partClone, _ in pairs(debrisParts) do
		local uniqueId = "Debris_" .. partClone.Name
		partsData[uniqueId] = {
			CFrame = partClone.CFrame,
			isActive = true
		}
	end

	for originalPart, partClone in pairs(trackedParts) do
		if typeof(originalPart) == "Instance" and not originalPart.Parent then
			local uniqueId = "Debris_" .. partClone.Name
			partsData[uniqueId] = {
				CFrame = partClone.CFrame,
				isActive = false
			}
		end
	end

	if next(partsData) == nil then
		playPauseButton.Text = "▶"
		isRecording = false
		isPausedRecording = false
		if heartbeatConnection then
			heartbeatConnection:Disconnect()
		end
		return false
	end

	local currentTime = os.clock() - startTime - pausedTime
	table.insert(recordings, {
		time = currentTime,
		parts = partsData
	})
	return true
end

-- Função para atualizar o cronômetro
local function updateTimeLabel()
	if isRecording and not isPausedRecording then
		elapsedTime = os.clock() - startTime - pausedTime
		timeLabel.Text = formatTime(elapsedTime)
	end
end

-- Função para obter o próximo nome de ReplayCar
local function getNextReplayCarName()
	local carCount = 0
	for _, obj in pairs(carsReplayFolder:GetChildren()) do
		if obj.Name:match("^ReplayCar(%d+)$") or obj.Name:match("^SavedCar(%d+)$") then
			local num = tonumber(obj.Name:match("%d+$"))
			carCount = math.max(carCount, num)
		end
	end
	return "ReplayCar" .. (carCount + 1)
end

-- Função para clonar e salvar o carro em CarsReplay
local function saveCarModel()
	local car = getPlayerCar()
	if not car then
		return nil
	end

	local carCopy = car:Clone()
	carCopy.Name = getNextReplayCarName()
	for _, part in pairs(carCopy:GetDescendants()) do
		if part:IsA("BasePart") then
			part.Anchored = false
			part.CanCollide = false
		elseif part:IsA("VehicleSeat") then
			part.Disabled = true
		elseif part:IsA("BodyVelocity") or part:IsA("BodyGyro") then
			part:Destroy()
		end
	end
	carCopy.Parent = carsReplayFolder
	return carCopy
end

-- Função para destruir todas as cópias do carro e peças no Workspace
local function destroyAllClones()
	for _, obj in pairs(Workspace:GetChildren()) do
		if obj.Name == "Clone" or obj.Name:match("^Clone%d+$") or obj.Name == "DebrisClone" or obj.Name:match("^DebrisClone%d+$") then
			obj:Destroy()
		end
	end
	tempDebrisFolder:ClearAllChildren()
	trackedParts = {}
	for _, replay in pairs(activeReplays) do
		if replay.connection then
			replay.connection:Disconnect()
		end
	end
	activeReplays = {}
	if currentSpectatedClone then
		stopSpectate()
	end
	updateCloneList()
end

-- Função para duplicar o carro e criar clones de peças soltas
local function duplicateCarAndDebris(carModel, recordedParts)
	if not carModel then
		return nil, nil
	end

	local carCopy = carModel:Clone()
	local cloneCount = 0
	local existingClones = {}
	for _, obj in pairs(Workspace:GetChildren()) do
		if obj.Name == "Clone" or obj.Name:match("^Clone%d+$") then
			existingClones[obj.Name] = true
			if obj.Name:match("^Clone(%d+)$") then
				local num = tonumber(obj.Name:match("^Clone(%d+)$"))
				cloneCount = math.max(cloneCount, num + 1)
			else
				cloneCount = math.max(cloneCount, 1)
			end
		end
	end
	carCopy.Name = not existingClones["Clone"] and cloneCount == 0 and "Clone" or "Clone" .. cloneCount
	for _, part in pairs(carCopy:GetDescendants()) do
		if part:IsA("BasePart") then
			part.Anchored = true
			part.CanCollide = false
		elseif part:IsA("VehicleSeat") then
			part.Disabled = true
		elseif part:IsA("BodyVelocity") or part:IsA("BodyGyro") or part:IsA("CylindricalConstraint") or part:IsA("HingeConstraint") then
			part:Destroy()
		end
	end
	carCopy.Parent = Workspace

	local debrisClones = {}
	local debrisCloneCount = 0
	local existingDebrisClones = {}
	for _, obj in pairs(Workspace:GetChildren()) do
		if obj.Name == "DebrisClone" or obj.Name:match("^DebrisClone%d+$") then
			existingDebrisClones[obj.Name] = true
			if obj.Name:match("^DebrisClone(%d+)$") then
				local num = tonumber(obj.Name:match("^DebrisClone(%d+)$"))
				debrisCloneCount = math.max(debrisCloneCount, num + 1)
			else
				debrisCloneCount = math.max(debrisCloneCount, 1)
			end
		end
	end

	for uniqueId, _ in pairs(recordedParts) do
		if uniqueId:match("^Debris_") then
			local debrisName = uniqueId:match("^Debris_(.+)$")
			local originalDebris = tempDebrisFolder:FindFirstChild(debrisName)
			if originalDebris then
				local debrisCopy = originalDebris:Clone()
				debrisCopy.Name = not existingDebrisClones["DebrisClone"] and debrisCloneCount == 0 and "DebrisClone" or "DebrisClone" .. debrisCloneCount
				debrisCopy.Anchored = true
				debrisCopy.CanCollide = false
				debrisCopy.Parent = Workspace
				debrisClones[uniqueId] = debrisCopy
				debrisCloneCount = debrisCloneCount + 1
			end
		end
	end

	return carCopy, debrisClones
end

-- Função para atualizar a lista de clones
local function updateCloneList()
	cloneList:ClearAllChildren()
	cloneList.CanvasSize = UDim2.new(0, 0, 0, 0)
	local height = 0
	for _, replay in pairs(activeReplays) do
		local cloneName = replay.carCopy.Name
		local cloneButton = Instance.new("TextButton")
		cloneButton.Size = UDim2.new(1, -10, 0, 30)
		cloneButton.Position = UDim2.new(0, 5, 0, height)
		cloneButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
		cloneButton.Text = cloneName
		cloneButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		cloneButton.TextScaled = true
		cloneButton.Font = Enum.Font.Gotham
		cloneButton.Parent = cloneList

		local cloneButtonCorner = Instance.new("UICorner")
		cloneButtonCorner.CornerRadius = UDim.new(0, 6)
		cloneButtonCorner.Parent = cloneButton

		local cloneButtonStroke = Instance.new("UIStroke")
		cloneButtonStroke.Color = Color3.fromRGB(255, 255, 255)
		cloneButtonStroke.Thickness = 1
		cloneButtonStroke.Parent = cloneButton

		cloneButton.MouseButton1Click:Connect(function()
			spectateClone(replay.carCopy)
			cloneList.Visible = false
		end)

		height = height + 35
	end
	cloneList.CanvasSize = UDim2.new(0, 0, 0, height)
end

-- Função para atualizar a lista de gravações salvas
local function updateSavedRecordingsList()
	savedRecordingsList:ClearAllChildren()
	savedRecordingsList.CanvasSize = UDim2.new(0, 0, 0, 0)
	local height = 0
	for _, saved in pairs(savedRecordings) do
		local recordingFrame = Instance.new("Frame")
		recordingFrame.Size = UDim2.new(1, -10, 0, 30)
		recordingFrame.Position = UDim2.new(0, 5, 0, height)
		recordingFrame.BackgroundTransparency = 1
		recordingFrame.Parent = savedRecordingsList

		local recordingLabel = Instance.new("TextLabel")
		recordingLabel.Size = UDim2.new(0, 80, 0, 30)
		recordingLabel.Position = UDim2.new(0, 0, 0, 0)
		recordingLabel.BackgroundTransparency = 1
		recordingLabel.Text = saved.id
		recordingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		recordingLabel.TextScaled = true
		recordingLabel.Font = Enum.Font.Gotham
		recordingLabel.Parent = recordingFrame

		local replaySavedButton = Instance.new("TextButton")
		replaySavedButton.Size = UDim2.new(0, 30, 0, 30)
		replaySavedButton.Position = UDim2.new(0, 90, 0, 0)
		replaySavedButton.BackgroundColor3 = Color3.fromRGB(52, 120, 246)
		replaySavedButton.Text = "▶"
		replaySavedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		replaySavedButton.TextScaled = true
		replaySavedButton.Font = Enum.Font.Gotham
		replaySavedButton.Parent = recordingFrame

		local replaySavedButtonCorner = Instance.new("UICorner")
		replaySavedButtonCorner.CornerRadius = UDim.new(0, 6)
		replaySavedButtonCorner.Parent = replaySavedButton

		local replaySavedButtonStroke = Instance.new("UIStroke")
		replaySavedButtonStroke.Color = Color3.fromRGB(255, 255, 255)
		replaySavedButtonStroke.Thickness = 1
		replaySavedButtonStroke.Parent = replaySavedButton

		replaySavedButton.MouseButton1Click:Connect(function()
			replayAllPartsActions(saved.recordings, saved.carModel)
		end)

		local deleteSavedButton = Instance.new("TextButton")
		deleteSavedButton.Size = UDim2.new(0, 30, 0, 30)
		deleteSavedButton.Position = UDim2.new(0, 130, 0, 0)
		deleteSavedButton.BackgroundColor3 = Color3.fromRGB(211, 47, 47)
		deleteSavedButton.Text = "X"
		deleteSavedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		deleteSavedButton.TextScaled = true
		deleteSavedButton.Font = Enum.Font.Gotham
		deleteSavedButton.Parent = recordingFrame

		local deleteSavedButtonCorner = Instance.new("UICorner")
		deleteSavedButtonCorner.CornerRadius = UDim.new(0, 6)
		deleteSavedButtonCorner.Parent = deleteSavedButton

		local deleteSavedButtonStroke = Instance.new("UIStroke")
		deleteSavedButtonStroke.Color = Color3.fromRGB(255, 255, 255)
		deleteSavedButtonStroke.Thickness = 1
		deleteSavedButtonStroke.Parent = deleteSavedButton

		deleteSavedButton.MouseButton1Click:Connect(function()
			for i, s in ipairs(savedRecordings) do
				if s.id == saved.id then
					if s.carModel then
						s.carModel:Destroy()
					end
					table.remove(savedRecordings, i)
					break
				end
			end
			updateSavedRecordingsList()
		end)

		height = height + 35
	end
	savedRecordingsList.CanvasSize = UDim2.new(0, 0, 0, height)
end

-- Função para salvar uma gravação
local function saveRecording()
	if #recordings == 0 or not currentReplayCarModel then
		saveButton.Text = "No Data!"
		task.wait(1)
		saveButton.Text = "Save"
		return
	end

	recordingCount = recordingCount + 1
	local recordingId = "Recording" .. recordingCount
	local carModelCopy = currentReplayCarModel:Clone()
	carModelCopy.Name = "SavedCar" .. recordingCount
	carModelCopy.Parent = carsReplayFolder
	local savedRecordingsCopy = {}
	for _, frame in ipairs(recordings) do
		local partsCopy = {}
		for uniqueId, data in pairs(frame.parts) do
			partsCopy[uniqueId] = {
				CFrame = data.CFrame,
				isActive = data.isActive
			}
		end
		table.insert(savedRecordingsCopy, {
			time = frame.time,
			parts = partsCopy
		})
	end
	table.insert(savedRecordings, {
		id = recordingId,
		carModel = carModelCopy,
		recordings = savedRecordingsCopy
	})
	updateSavedRecordingsList()
end

-- Função para spectar um clone
local function spectateClone(clone)
	if not clone or not clone.Parent then
		spectateButton.Text = "No Clone!"
		task.wait(1)
		spectateButton.Text = "Spectate"
		return
	end

	local bodyPart = clone:FindFirstChild("Body")
	if not bodyPart then
		spectateButton.Text = "No Body!"
		task.wait(1)
		spectateButton.Text = "Spectate"
		return
	end

	stopSpectate()
	currentSpectatedClone = clone
	Camera.CameraType = Enum.CameraType.Scriptable
	stopSpectateButton.Visible = true

	spectateConnection = RunService.RenderStepped:Connect(function()
		if not currentSpectatedClone or not currentSpectatedClone.Parent or not currentSpectatedClone:FindFirstChild("Body") then
			stopSpectate()
			return
		end

		local offset = CFrame.new(0, 5, -10)
		local cameraCFrame = bodyPart.CFrame * offset
		Camera.CFrame = cameraCFrame
	end)
end

-- Função para parar de spectar
local function stopSpectate()
	if spectateConnection then
		spectateConnection:Disconnect()
		spectateConnection = nil
	end
	currentSpectatedClone = nil
	Camera.CameraType = Enum.CameraType.Custom
	Camera.CameraSubject = player.Character and player.Character:FindFirstChild("Humanoid")
	stopSpectateButton.Visible = false
	spectateButton.Text = "Spectate"
end

-- Função para reproduzir as gravações em um clone específico
local function replayAllPartsActions(recordingsToPlay, carModel)
	if #recordingsToPlay == 0 then
		replayButton.Text = "Replay"
		task.wait(1)
		replayButton.Text = "Replay"
		return
	end

	local recordedParts = recordingsToPlay[1].parts
	local carCopy, debrisClones = duplicateCarAndDebris(carModel, recordedParts)
	if not carCopy then
		replayButton.Text = "No Car!"
		task.wait(1)
		replayButton.Text = "Replay"
		return
	end

	local partsMap = {}
	local partIndex = {}
	for _, part in pairs(carCopy:GetDescendants()) do
		if part:IsA("BasePart") then
			local partName = part.Name
			partIndex[partName] = (partIndex[partName] or 0) + 1
			local uniqueId = "Car_" .. partName .. "_" .. partIndex[partName]
			partsMap[uniqueId] = part
		end
	end
	for uniqueId, debrisPart in pairs(debrisClones) do
		partsMap[uniqueId] = debrisPart
	end

	if next(partsMap) == nil then
		replayButton.Text = "No Parts!"
		task.wait(1)
		replayButton.Text = "Replay"
		carCopy:Destroy()
		for _, debrisPart in pairs(debrisClones) do
			debrisPart:Destroy()
		end
		return
	end

	local replayData = {
		carCopy = carCopy,
		debrisClones = debrisClones,
		partsMap = partsMap,
		recordings = recordingsToPlay,
		startTime = os.clock(),
		currentIndex = 1,
		pausedTime = 0,
		connection = nil
	}
	table.insert(activeReplays, replayData)
	updateCloneList()

	local function playReplay()
		replayData.connection = RunService.Heartbeat:Connect(function()
			if isPaused then
				return
			end

			local adjustedTime = (os.clock() - replayData.startTime - replayData.pausedTime) * playbackSpeed
			if replayData.currentIndex > #recordingsToPlay then
				if isLooping then
					replayData.currentIndex = 1
					replayData.startTime = os.clock()
					replayData.pausedTime = 0
					adjustedTime = 0
					for uniqueId, debrisPart in pairs(replayData.debrisClones) do
						if not debrisPart.Parent then
							local debrisName = uniqueId:match("^Debris_(.+)$")
							local originalDebris = tempDebrisFolder:FindFirstChild(debrisName)
							if originalDebris then
								local newDebrisCopy = originalDebris:Clone()
								newDebrisCopy.Name = debrisPart.Name
								newDebrisCopy.Anchored = true
								newDebrisCopy.CanCollide = false
								newDebrisCopy.Parent = Workspace
								replayData.debrisClones[uniqueId] = newDebrisCopy
								replayData.partsMap[uniqueId] = newDebrisCopy
							end
						end
					end
				else
					if replayData.connection then
						replayData.connection:Disconnect()
						replayData.connection = nil
					end
					for i, activeReplay in ipairs(activeReplays) do
						if activeReplay == replayData then
							table.remove(activeReplays, i)
							break
						end
					end
					updateCloneList()
					if currentSpectatedClone == carCopy then
						stopSpectate()
					end
					return
				end
			end

			while replayData.currentIndex <= #recordingsToPlay and recordingsToPlay[replayData.currentIndex].time <= adjustedTime do
				replayData.currentIndex = replayData.currentIndex + 1
			end

			local prevFrame = recordingsToPlay[math.max(1, replayData.currentIndex - 1)]
			local nextFrame = recordingsToPlay[replayData.currentIndex] or prevFrame
			local t = nextFrame.time == prevFrame.time and 1 or (adjustedTime - prevFrame.time) / (nextFrame.time - prevFrame.time)
			t = math.clamp(t, 0, 1)

			for uniqueId, part in pairs(replayData.partsMap) do
				local prevData = prevFrame.parts[uniqueId]
				local nextData = nextFrame.parts[uniqueId]
				if prevData and nextData then
					if nextData.isActive and part.Parent then
						local lerpedCFrame = prevData.CFrame:Lerp(nextData.CFrame, t)
						part.CFrame = lerpedCFrame
					elseif not nextData.isActive and part.Parent then
						part:Destroy()
						replayData.partsMap[uniqueId] = nil
						if replayData.debrisClones[uniqueId] then
							replayData.debrisClones[uniqueId] = nil
						end
					end
				end
			end
		end)
	end

	playReplay()
end

-- Conexão do botão Recording
recordingButton.MouseButton1Click:Connect(function()
	recordingFrame.Visible = not recordingFrame.Visible
end)

-- Conexão do botão Saved Recordings
savedButton.MouseButton1Click:Connect(function()
	savedRecordingsFrame.Visible = not savedRecordingsFrame.Visible
end)

-- Conexão do botão Play/Pause
playPauseButton.MouseButton1Click:Connect(function()
	if not isRecording then
		isRecording = true
		isPausedRecording = false
		recordings = {}
		trackedParts = {}
		tempDebrisFolder:ClearAllChildren()
		startTime = os.clock()
		pausedTime = 0
		elapsedTime = 0
		timeLabel.Text = "00:00:000"
		currentReplayCarModel = saveCarModel()
		if not currentReplayCarModel then
			playPauseButton.Text = "▶"
			isRecording = false
			return
		end
		heartbeatConnection = RunService.Heartbeat:Connect(function()
			if not isPausedRecording then
				if recordAllPartsActions() then
					updateTimeLabel()
				end
			end
		end)
		playPauseButton.Text = "⏸"
	else
		isPausedRecording = not isPausedRecording
		if isPausedRecording then
			pausedTime = os.clock() - startTime - elapsedTime
			playPauseButton.Text = "▶"
		else
			startTime = os.clock() - elapsedTime - pausedTime
			playPauseButton.Text = "⏸"
		end
	end
end)

-- Conexão do botão Stop
stopButton.MouseButton1Click:Connect(function()
	if isRecording then
		isRecording = false
		isPausedRecording = false
		if heartbeatConnection then
			heartbeatConnection:Disconnect()
			heartbeatConnection = nil
		end
		playPauseButton.Text = "▶"
	end
end)

-- Conexão do botão Clear
clearButton.MouseButton1Click:Connect(function()
	recordings = {}
	elapsedTime = 0
	pausedTime = 0
	timeLabel.Text = "00:00:000"
	if isRecording then
		isRecording = false
		isPausedRecording = false
		if heartbeatConnection then
			heartbeatConnection:Disconnect()
			heartbeatConnection = nil
		end
		playPauseButton.Text = "▶"
	end
	currentReplayCarModel = nil
	destroyAllClones()
end)

-- Conexão do botão Replay
replayButton.MouseButton1Click:Connect(function()
	if isRecording then
		replayButton.Text = "Stop Rec!"
		task.wait(1)
		replayButton.Text = "Replay"
		return
	end
	if currentReplayCarModel and #recordings > 0 then
		replayAllPartsActions(recordings, currentReplayCarModel)
	end
end)

-- Conexão do botão Delete Clones
deleteClonesButton.MouseButton1Click:Connect(function()
	destroyAllClones()
end)

-- Conexão do botão Pause (para replays)
pauseButton.MouseButton1Click:Connect(function()
	isPaused = not isPaused
	pauseButton.Text = isPaused and "Resume" or "Pause"
	if isPaused then
		for _, replay in pairs(activeReplays) do
			if replay.connection then
				replay.pausedTime = os.clock() - replay.startTime
				replay.connection:Disconnect()
				replay.connection = nil
			end
		end
	else
		for _, replay in pairs(activeReplays) do
			replay.startTime = os.clock() - replay.pausedTime
			local recordingsToPlay = replay.recordings
			local partsMap = replay.partsMap
			local carCopy = replay.carCopy
			local debrisClones = replay.debrisClones
			replay.connection = RunService.Heartbeat:Connect(function()
				if isPaused then
					return
				end

				local adjustedTime = (os.clock() - replay.startTime - replay.pausedTime) * playbackSpeed
				if replay.currentIndex > #recordingsToPlay then
					if isLooping then
						replay.currentIndex = 1
						replay.startTime = os.clock()
						replay.pausedTime = 0
						adjustedTime = 0
						for uniqueId, debrisPart in pairs(replay.debrisClones) do
							if not debrisPart.Parent then
								local debrisName = uniqueId:match("^Debris_(.+)$")
								local originalDebris = tempDebrisFolder:FindFirstChild(debrisName)
								if originalDebris then
									local newDebrisCopy = originalDebris:Clone()
									newDebrisCopy.Name = debrisPart.Name
									newDebrisCopy.Anchored = true
									newDebrisCopy.CanCollide = false
									newDebrisCopy.Parent = Workspace
									replay.debrisClones[uniqueId] = newDebrisCopy
									replay.partsMap[uniqueId] = newDebrisCopy
								end
							end
						end
					else
						if replay.connection then
							replay.connection:Disconnect()
							replay.connection = nil
						end
						for i, activeReplay in ipairs(activeReplays) do
							if activeReplay == replay then
								table.remove(activeReplays, i)
								break
							end
						end
						updateCloneList()
						if currentSpectatedClone == carCopy then
							stopSpectate()
						end
						return
					end
				end

				while replay.currentIndex <= #recordingsToPlay and recordingsToPlay[replay.currentIndex].time <= adjustedTime do
					replay.currentIndex = replay.currentIndex + 1
				end

				local prevFrame = recordingsToPlay[math.max(1, replay.currentIndex - 1)]
				local nextFrame = recordingsToPlay[replay.currentIndex] or prevFrame
				local t = nextFrame.time == prevFrame.time and 1 or (adjustedTime - prevFrame.time) / (nextFrame.time - prevFrame.time)
				t = math.clamp(t, 0, 1)

				for uniqueId, part in pairs(partsMap) do
					local prevData = prevFrame.parts[uniqueId]
					local nextData = nextFrame.parts[uniqueId]
					if prevData and nextData then
						if nextData.isActive and part.Parent then
							local lerpedCFrame = prevData.CFrame:Lerp(nextData.CFrame, t)
							part.CFrame = lerpedCFrame
						elseif not nextData.isActive and part.Parent then
							part:Destroy()
							partsMap[uniqueId] = nil
							if debrisClones[uniqueId] then
								debrisClones[uniqueId] = nil
							end
						end
					end
				end
			end)
		end
	end
end)

-- Conexão do botão Loop
loopButton.MouseButton1Click:Connect(function()
	isLooping = not isLooping
	loopButton.Text = isLooping and "Loop On" or "Loop"
end)

-- Conexão do campo Slowmotion
slowmotionInput.FocusLost:Connect(function()
	local input = tonumber(slowmotionInput.Text)
	if input and input > 0 then
		playbackSpeed = input
	else
		slowmotionInput.Text = tostring(playbackSpeed)
	end
end)

-- Conexão do botão Spectate
spectateButton.MouseButton1Click:Connect(function()
	cloneList.Visible = not cloneList.Visible
	updateCloneList()
end)

-- Conexão do botão Stop Spectate
stopSpectateButton.MouseButton1Click:Connect(function()
	stopSpectate()
end)

-- Conexão do botão Save
saveButton.MouseButton1Click:Connect(function()
	saveRecording()
end)
